
1、定义：
正则表达式用来描述了一种字符串匹配的模式；

构建正则表达式就如同构造一种数学表达式一般。正则表达式有两个部分：普通字符、元字符（特殊字符）
通过二者的结合，构建出某种字符串匹配模式；

正则表达式就是用一个“字符串”模板来描述一个特征，然后依据这一个模板去验证另一个字符串是否符合这一特征；

常见应用：验证字符串、查找字符串；


  
2、元字符

（1）限定符：
用来指定正则表达式中的一个给定组件必须要出现多少次才能满足条件；
*：匹配前面的子表达式0或多
+：匹配前面的子表达式1或多
？：匹配前面的子表达式0或1；它可以跟在其他限定符后面；
{m}：匹配前面的子表达式m
{m,}：匹配前面的子表达式至少m
{m,n}：匹配前面的子表达式m到n


(2)定位符：
用来描述了字符串或单词的边界：
^:匹配输入行开始的位置
$:匹配输入行结束的位置
\b:匹配一个字边界，即字与空格间的位置
\B:匹配非字边界

（3）运算符：

（1）运算符结合规则：
从左到右：
从高到低（运算级）：


（2）运算符从高级到低级:

\:转义符

()、(?:)、 (?=),、[]:圆括号和方括号

*、 +、 ?、 {n},、{n,}、 {n,m}	:限定符

^、 $、\任何字符:定位点和序列（即：位置和顺序）

|:	
替换，"或"操作







3、模式：是正则表达式最基本的元素，它们是一组描述字符串特征的字符。
	 模式可以很简单，由普通的字符串组成；
	 也可以非常复杂，往往用特殊的字符表示一个范围内的字符、重复出现；



.:匹配任意一个字符。

\	
将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用。
注：在正则表达式中，有些字符被规定了特殊含义，若要引用它原来的含义，需要用到"\"来转义它们。
比如：.\+*?^$[](){}=!<>|:-



\d:	
匹配一个数字字符。等价于 [0-9]
\D:	
匹配一个非数字字符。等价于 [^0-9]

\n:	
匹配一个换行符。等价于 \x0a 和 \cJ

\s:	
匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]
\S:	
匹配任何非空白字符。等价于 [^ \f\n\r\t\v]

\w:	
匹配字母、数字、下划线。等价于'[A-Za-z0-9_]
\W:	
匹配非字母、数字、下划线。等价于 '[^A-Za-z0-9_]




反向引用:模式也被称为一个子表达式，用圆括号分开；
	当一个正则表达式被分组之后，每个组自动被赋予一个组号，该组号可以代表该组的表达式。组号的编制规则：从左到右，以分组的“（”为标志，第一个组号为1，第二个组号为2，以此类推；
	在查找重复字符组的时候，反向引用可以使用组号来代替前面的表达式；







普通字符、元字符、转义符、限定符、运算符、子表达式（模式）






4、数字验证：

实数验证：^-?(0|([1-9]\d*))\.\d+$
科学计数法的验证：a*10^n的形式，a为1到10之间的实数：
		^-?[1-9](\.\d+)?\*10\^-?\d+$


5、字符串验证：
指定结尾的英文单词：\b[a-z]+(?:ing)\b

以两个相同字母开头的英文单词验证：\b([a-z])\1[a-z]*\b
至少存在两个相同字母的英文单词验证：\b[a-z]*([a-z])[a-z]*(\1)+[a-z]*\b





6、HTML元素的验证

URL:统一资源定位符，也被称为网址；

互联网上的资源分布在各个web站点，要想获取资源就必须先获得它的地址（即URL）。互联网上的每个文件都有它的唯一URL；

URL包含的信息：该文件的位置，以及浏览器如何处理它；

URL组成部分：
	访问协议类型（http://、ftp://）、主机地址、文件名（包含路径）；

验证：
（1）验证属性值：
一般四种格式：
	属性名="值"/属性名='值'/属性名=值/属性名

综合一下：\w+((\s*=\s*)(("[^"]*")|('[^']*')|([^ ]+)))?



（2）验证单个标记：

一般格式：<tagname 属性赋值表达式* />
		

即：<\w+(\s+\w+((\s*=\s*)(("[^"]*")|('[^']*')|([^ ]+)))?)*\s*/>




（3）验证成对标记
一般格式：<tagname 属性赋值表达式* >HTML文本</tagname>

即：<(\w+)(\s+\w+((\s*=\s*)(("[^"]*")|('[^']*')|([^ ]+)))?)*\s*>.*?</\1>





（4）验证注释
注释格式：<!-- ……-->

即：<!--.*?-->


（5）验证脚本

脚本格式：<script>……</script>

即：<script>.*?</script>




处理：
（1）提取标记
标记格式：<string>/</string>

即：</?[a-zA-Z]\w*>


（2）提取内容
网页内容一般位于一对成对标记之间
格式：<tagname>……</tagname>

即：(?<=<(?<tag>[a-zA-Z]\w*)\s+[^>]*>).*(?=<\/\k<tag>>)




（3）提取URL
URL的一般格式：
	为一个字符串：以"http(s)://"开头的字符串，它可以被.///?/=等字符分割；
即：http(s)?://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?


(4)提取图像的URL：
图像的URL在被包含在<img>元素中。

即：（?<=<img\s*[^>]*)http(s)?://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?






